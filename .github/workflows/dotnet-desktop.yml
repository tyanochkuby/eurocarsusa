name: Deploy Application with VPN

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IIS_SHARE: '\\\\iis-2019.wmi.amu.edu.pl\\s473603\\public_iis'
      OFFLINE_FILE: 'app_offline.htm'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create OpenVPN Config File
        run: |
          echo "${{ secrets.OPEN_VPN_CONFIG }}" | base64 --decode > vpn-config.ovpn

      - name: Install OpenVPN and smbclient
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn smbclient

      - name: Create temporary file for VPN credentials
        run: |
          echo -e "${{ secrets.OPEN_VPN_LOGIN }}\n${{ secrets.OPEN_VPN_PASSWORD }}" > /tmp/vpn-credentials.txt

      - name: Connect to VPN
        run: |
          sudo openvpn --config vpn-config.ovpn --auth-user-pass /tmp/vpn-credentials.txt --daemon

      - name: Verify VPN Connection
        run: curl ifconfig.me

      - name: Prepare Network Share
        run: |
          smbclient //iis-2019.wmi.amu.edu.pl/s473603/public_iis -U ${{ secrets.IIS_LOGIN }}%${{ secrets.IIS_PASSWORD }} -c "echo 'Application offline for maintenance' > ${{ env.OFFLINE_FILE }}"

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: dotnet build --configuration Release

      - name: Publish Application
        run: dotnet publish --configuration Release --output ./publish

      - name: Deploy to Network Share
        run: |
          smbclient //iis-2019.wmi.amu.edu.pl/s473603/public_iis -U ${{ secrets.IIS_LOGIN }}%${{ secrets.IIS_PASSWORD }} -c "prompt OFF; mput ./publish/*"

      - name: Cleanup
        run: |
          smbclient //iis-2019.wmi.amu.edu.pl/s473603/public_iis -U ${{ secrets.IIS_LOGIN }}%${{ secrets.IIS_PASSWORD }} -c "del ${{ env.OFFLINE_FILE }}"

      - name: Clean Up VPN Config File
        run: rm -f vpn-config.ovpn
