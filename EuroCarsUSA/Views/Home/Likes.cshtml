@using EuroCarsUSA.Controllers
@using Microsoft.Extensions.Localization
@model IEnumerable<Car>

@inject IStringLocalizer<HomeController> Translator

<h1 class="fh-header text-center mb-3">@Translator["LikesHeader"]</h1>

<div class="bg-primary-200 p-5">

    @Html.Partial("_LineEdit", new
        {
            Classes = "mb-3",
            Attributes = "",

            Leading = Html.Partial("_Icon", new { IconName = Url.Content("Search"), Color = "neutral900" }),
            Trailing = Html.Partial("_IconButton", new { IconName = "Clear", Color = "primary", IconColor = "neutral900" }),
            Clickable = true,

            Condition = "1-line",
            Headline = "Placeholder",

            ShowOverline = true,
            ShowOverlineInside = true,
            HasOutsidOverlineSizeEffect = false,
            Overline = "Label",

            ShowSupportive = true,
            ShowSupportiveInside = false,
            HasOutsideSupportiveSizeEffect = false,
            Supportive = "Supporting line",

            ShowAdditional = true,
            ShowAdditionalBackgroud = false,
            Additional = "100+"
        })

    

        <div class="row">
            <div class="col">
            @Html.Partial("_ListItem", new
                {
                    Classes = "",
                    Attributes = "",

                    Leading = Html.Partial("_Icon", new { IconName = Url.Content("Search"), Color = "neutral900" }),
                    Trailing = Html.Partial("_Checkbox", new
                    {
                        Text = "",
                        Classes = "",
                        Attributes = ""
                    }),
                    Clickable = true,

                    Condition = "2-line",
                    Headline = "List Item",

                    ShowOverline = false,
                    ShowOverlineInside = true,
                    HasOutsidOverlineSizeEffect = false,
                    Overline = "Overline111",

                    ShowSupportive = true,
                    ShowSupportiveInside = false,
                    HasOutsideSupportiveSizeEffect = false,
                    Supportive = "Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line ",

                    ShowAdditional = false,
                    ShowAdditionalBackgroud = true,
                    Additional = "100+",

                    ShowDivider = true
                })
            </div>
            <div class="col"></div>
        </div>
</div>

<div data-show-more-button="@ViewBag.ShowMoreButton" data-cars-in-view="@Model.Count()">
    <div class="row mx-0">
        @foreach (Car car in Model)
        {
            <div class="col-xl-4 col-lg-4 col-md-6 col-sm-6 col-6 px-1 px-sm-2">
                <a asp-controller="Home" , asp-action="Detail" , asp-route-id=@car.Id class="text-black text-decoration-none">
                    <div class="card mb-4 pt-2 box-shadow rounded-xxl">
                        <div class="img-container overflow-hidden mx-2 mt-1">
                            <img class="card-img float-left rounded-xxl" src=@car.Images[0] alt=@(car.Color.ToString() + car.Make.ToString() + car.Model)>
                        </div>

                        <div class="card-body">
                            <div class="row justify-content-between fh-regular">
                                <!-- Car nam -->
                                <div class="col-sm-7 col-12 px-1 px-sm-2 fh-card-header">
                                    <b>@(car.Make + " " + car.Model)</b>
                                </div>
                                <!-- Price -->
                                <div class="col-sm-5 col-12 px-1 px-sm-2 text-sm-end fh-card-title">
                                    <div class="mb-0">@string.Format(new System.Globalization.CultureInfo("pl-PL"), "{0:N0}", car.Price) PLN</div>
                                </div>
                            </div>

                            <!-- divider -->
                            <hr style="border-top: 1px solid #000;" class="mb-2 mt-1">


                            <div class="row justify-content-between fh-regular">
                                <div class="col-12 col-sm-6">
                                    <div class="row">
                                        <div class="d-flex align-items-center justify-content-start">
                                            <img class="carIcon" src="/icons/car_millage.svg">
                                            <div class="ms-2 text-subhead">@car.Mileage</div>
                                            <div class="ms-2 text-subhead">km</div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="d-flex align-items-center justify-content-start">
                                            <img class="carIcon" src="/icons/car_engine.svg">
                                            <div class="ms-2 text-subhead">@(car.FuelType == EuroCarsUSA.Data.Enum.CarFuelType.Electric ? "Electric" : car.EngineVolume.ToString() + " cm3")</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 text-sm-end">
                                    <div class="row">
                                        <div class="d-flex align-items-center justify-content-start justify-content-sm-end">
                                            <img class="carIcon" src="/icons/car_gearbox.svg">
                                            <div class="ms-2 text-subhead">@car.Transmission.ToString()</div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="d-flex align-items-center justify-content-start justify-content-sm-end">
                                            <img class="carIcon" src="/icons/car_year.svg">
                                            <div class="ms-2 text-subhead">@car.Year</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row d-flex justify-content-end">
                            <div class="col-xl-4 col-md-6 col-sm-6 col-6 mb-3 pe-4 ps-1">
                                <button type="button" onclick="likeCar('@car.Id', event, this)" data-car-id="@car.Id" class="btn btn-primary like-button rounded-pill w-100">
                                    <svg class="carIcon" width="96" height="96" viewBox="0 0 96 96" fill="white" xmlns="http://www.w3.org/2000/svg">
                                        <g clip-path="url(#clip0_292_967)">
                                            <path d="M48 85.4L42.2 80.12C21.6 61.44 8 49.12 8 34C8 21.68 17.68 12 30 12C36.96 12 43.64 15.24 48 20.36C52.36 15.24 59.04 12 66 12C78.32 12 88 21.68 88 34C88 49.12 74.4 61.44 53.8 80.16L48 85.4Z" fill="white" />
                                        </g>
                                        <defs>
                                            <clipPath id="clip0_292_967">
                                                <rect width="96" height="96" fill="#white" />
                                            </clipPath>
                                        </defs>
                                    </svg>

                                </button>
                            </div>
                        </div>

                    </div>
                </a>
            </div>
        }
    </div>
</div>


@section Scripts{
    <script>
        function likeCar(carId, event, buttonElement) {
            // Prevent default action and event propagation
            event.preventDefault();
            event.stopPropagation();
            $(buttonElement).blur();
            $(buttonElement).toggleClass('btn-primary btn-secondary');
            var newFillColor = $(buttonElement).hasClass('btn-secondary') ? '#7e9ded' : 'white';
            $(buttonElement).find('svg path').attr('fill', newFillColor);
            var likes = getCookie("likes");
            var likesArray = likes ? JSON.parse(likes) : [];
            if (!likesArray.includes(carId)) {
                likesArray.push(carId);
            } else {
                likesArray = likesArray.filter(id => id !== carId);
            }


            // Save updated likes back to cookie
            setCookie("likes", JSON.stringify(likesArray), 7); // Expires in 7 days
        }

        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }

        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
    </script>
}