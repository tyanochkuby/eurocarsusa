@using EuroCarsUSA.ViewModels
@using EuroCarsUSA.Controllers
@using EuroCarsUSA.Data.Enums
@using EuroCarsUSA.Extensions
@using EuroCarsUSA.Models
@using Microsoft.Extensions.Localization
@model List<CarViewModel>

@inject IStringLocalizer<HomeController> Translator

<h1 class="fh-header text-center mb-3">@Translator["LikesHeader"]</h1>

<div class="bg-primary-200 p-5">
    <div class="row">
            <div class="col">
            @Html.Partial("_ListItem", new
                {
                    Classes = "",
                    Attributes = "",

                    Leading = Html.Partial("_Icon", new { IconName = Url.Content("Search"), Color = "neutral900" }),
                    Trailing = Html.Partial("_Checkbox", new
                    {
                        Text = "",
                        Classes = "",
                        Attributes = ""
                    }),
                    Clickable = true,

                    Condition = "2-line",
                    Headline = "List Item",

                    ShowOverline = false,
                    ShowOverlineInside = true,
                    HasOutsidOverlineSizeEffect = false,
                    Overline = "Overline111",

                    ShowSupportive = true,
                    ShowSupportiveInside = false,
                    HasOutsideSupportiveSizeEffect = false,
                    Supportive = "Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line Supporting line ",

                    ShowAdditional = false,
                    ShowAdditionalBackground = true,
                    Additional = "100+",

                    ShowDivider = true
                })
            </div>
            <div class="col">
            @Html.Partial("_LineEdit", new
                {
                    Classes = "",
                    Attributes = $"title=\"Only numbers!\" pattern=\"\\d+\" type=\"text\"",

                    Leading = (object)null,
                    Trailing = Html.Partial("_IconButton", new { IconName = "Clear", Color = "primary", IconColor = "neutral900", Attributes = "" }),

                    Placeholder = "Placeholder",

                    ShowOverline = true,
                    ShowOverlineInside = true,
                    HasOutsidOverlineSizeEffect = false,
                    Overline = "Label",

                    ShowSupportive = true,
                    HasOutsideSupportiveSizeEffect = false,
                    Supportive = "Supporting line",

                    ShowAdditional = true,
                    ShowAdditionalBackground = true,
                    Additional = "100+"
                })
            </div>
            <div class="col">
                @Html.Partial("_ExpandButton", new
                    {
                        Classes = "",
                        Attributes = $"",

                        Leading = (object)null,
                        Placeholder = "Placeholder",

                        ShowOverline = true,
                        ShowOverlineInside = false,
                        HasOutsidOverlineSizeEffect = false,
                        Overline = "Label",

                        ShowAdditional = true,
                        ShowAdditionalBackground = true,
                        Additional = "100+"
                    })
            </div>
        </div>
</div>

<div data-show-more-button="@ViewBag.ShowMoreButton" data-cars-in-view="@Model.Count()">
    <div class="row mx-0 p-3">
        @foreach (CarViewModel car in Model)
        {
            car.IsFullSize = true;
            car.Classes = "col-xl-3 col-lg-4 col-sm-6 col-12 p-2";
            @await Html.PartialAsync("_CarCard", car)
        }
    </div>
</div>


@section Scripts{

    <script>
        function likeCar(carId, event, buttonElement) {

            event.preventDefault();
            event.stopPropagation();
            $(buttonElement).blur();

            var likes = getCookie("likes");
            var likesArray = likes ? JSON.parse(decodeURIComponent(likes)) : [];

            var isLiked = likesArray.includes(carId);

            var partialViewUrl = isLiked ? '@Url.Action("UnpressedLikeButton", "Home")' : '@Url.Action("PressedLikeButton", "Home")';
            var actionUrl = isLiked ? '@Url.Action("UnlikeCar", "Home")' : '@Url.Action("LikeCar", "Home")'

            $.ajax({
                url: partialViewUrl,
                type: 'GET',
                data: { carId: carId },
                success: function (response) {
                    $(buttonElement).replaceWith(response.html);
                },
                error: function () {
                    console.error('Error loading button state');
                }
            });

            $.ajax({
                url: actionUrl,
                type: 'POST',
                data: { carId: carId },
                success: function (response) {
                    if (response.success) {
                        console.log('Car liked/unliked successfully');
                    }
                },
                error: function () {
                    console.error('Error liking/unliking car');
                }
            });
        }

        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/; Secure; SameSite=Lax";
        }

        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
    </script>
}