@using EuroCarsUSA.Resources
@model Tuple<List<string>, string, Guid>
@inject Localizer localizer


@{
    var images = Model.Item1;
    var uniqueId = Model.Item2;
    var carId = Model.Item3.ToString();
}

<div>
    <button type="button" class="btn btn-primary" onclick="showModal('@uniqueId')">@localizer.EditImages</button>

    <div id="imageEditorModal-@uniqueId" class="modal" tabindex="-1" style="display:none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@localizer.EditImages</h5>
                    <button type="button" class="btn-close" onclick="hideModal('@uniqueId')"></button>
                </div>
                <div class="modal-body">
                    <ul class="list-group">
                        @for (int i = 0; i < images.Count; i++)
                        {
                            <li class="list-group-item">
                                <img src="@images[i]" alt="Image" class="img-thumbnail" style="width: 100px; height: 100px;" />
                                <button type="button" class="btn btn-danger btn-sm" onclick="removeImage(this)">@localizer.Delete</button>
                            </li>
                        }
                    </ul>
                    <!-- Text input for uploading links -->
                    <input type="text" id="newImageUrl-@uniqueId" placeholder="@localizer.EnterImageURL" class="form-control mt-2" />
                    <button type="button" class="btn btn-success mt-2" onclick="addImage('@uniqueId')">@localizer.AddImage</button>

                    <!-- File input for uploading images -->
                    <input type="file" id="fileInput-@uniqueId" class="form-control mt-2" accept="image/*" />
                    <button type="button" class="btn btn-primary mt-2" onclick="uploadImage('@uniqueId', '@carId')">@localizer.UploadImage</button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="hideModal('@uniqueId')">@localizer.Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveChanges('@uniqueId')">@localizer.Save</button>
                </div>
            </div>
        </div>
    </div>
    <div id="modalBackdrop-@uniqueId" class="modal-backdrop" style="display:none;"></div>
</div>


<script>
    function uploadImage(uniqueId, carId) {
        var fileInput = document.getElementById('fileInput-' + uniqueId);
        var formData = new FormData();
        formData.append('file', fileInput.files[0]);
        formData.append('carId', carId);

        fetch('/api/upload', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                var newImageUrl = data.url;
                var imagesList = document.querySelector('#imageEditorModal-' + uniqueId + ' .list-group');
                var newImageItem = document.createElement('li');
                newImageItem.className = 'list-group-item';
                newImageItem.innerHTML = `<img src="${newImageUrl}" alt="Image" class="img-thumbnail" style="width: 100px; height: 100px;" />
                                          <button type="button" class="btn btn-danger btn-sm" onclick="removeImage(this)">Remove</button>`;
                imagesList.appendChild(newImageItem);
            } else {
                alert('Image upload failed');
            }
        })
        .catch(error => {
            console.error('Error uploading image:', error);
            alert('Image upload failed');
        });
    }
    function showModal(uniqueId) {
            document.getElementById('imageEditorModal-' + uniqueId).style.display = 'block';
            document.getElementById('modalBackdrop-' + uniqueId).style.display = 'block';
        }

        function hideModal(uniqueId) {
            document.getElementById('imageEditorModal-' + uniqueId).style.display = 'none';
            document.getElementById('modalBackdrop-' + uniqueId).style.display = 'none';
        }

        function addImage(uniqueId) {
            var newImageUrl = document.getElementById('newImageUrl-' + uniqueId).value;
            if (newImageUrl) {
                var listGroup = document.querySelector('#imageEditorModal-' + uniqueId + ' .list-group');
                var newItem = document.createElement('li');
                newItem.className = 'list-group-item';
                newItem.innerHTML = '<img src="' + newImageUrl + '" alt="Image" class="img-thumbnail" style="width: 100px; height: 100px;" />' +
                                    '<button type="button" class="btn btn-danger btn-sm" onclick="removeImage(this)">Remove</button>';
                listGroup.appendChild(newItem);
                document.getElementById('newImageUrl-' + uniqueId).value = '';
            }
        }

        function removeImage(button) {
            var listItem = button.parentElement;
            listItem.parentElement.removeChild(listItem);
        }

        function saveChanges(uniqueId) {
            var images = [];
            var listItems = document.querySelectorAll('#imageEditorModal-' + uniqueId + ' .list-group-item img');
            listItems.forEach(function(img) {
                images.push(img.src);
            });
            document.getElementById('ImagesJson-' + uniqueId).value = JSON.stringify(images);
            hideModal(uniqueId);
        }

</script>
