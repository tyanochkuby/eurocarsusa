@model dynamic

@{
    string classes = Model.Classes ?? "";
    string attributes = Model.Attributes ?? "";
    string text = Model.Text ?? "";
    bool isActive = Model.IsActive ?? false;

    var activeIcon = @Html.Partial("_Icon", new { IconName = "switch-icon-active", Color = "primary" });
    var notActiveIcon = @Html.Partial("_Icon", new { IconName = "switch-icon-not-active", Color = "secondary" });

    string switchClasses = isActive ? "switch active" : "switch";
    string switchTargetClasses = isActive ? "switch-target active-position" : "switch-target ";

    string isCheckboxChecked = isActive ? "checked" : "";
}



<div class="@Html.Raw($"checkbox-container {classes} {switchClasses}")">
    <label class="@Html.Raw(switchTargetClasses)">
        <input type="checkbox" onchange="toggleSwitch(this)" @Html.Raw(attributes) @Html.Raw(isCheckboxChecked)>
        <div class="switch-state-layer">
            <div class="switch-handle-shape ">
                <div class="d-block">
                    @(isActive ? activeIcon : notActiveIcon)
                </div>
                <div class="d-none">
                    @(isActive ? notActiveIcon : activeIcon)
                </div>
            </div>
        </div>
    </label>
</div>

<script>
    function toggleSwitch(inputElement) {
        const switchElement = inputElement.closest('.switch');
        const switchTarget = switchElement.querySelector('.switch-target');
        const isActive = inputElement.checked;

        const notActiveIcon = switchElement.querySelector('.d-none');
        const activeIcon = switchElement.querySelector('.d-block');

        notActiveIcon.classList.remove('d-none');
        notActiveIcon.classList.add('d-block');

        activeIcon.classList.remove('d-block');
        activeIcon.classList.add('d-none');

        if (isActive) {
            switchElement.classList.add('active');
            switchTarget.classList.add('active-position');
        } else {
            switchElement.classList.remove('active');
            switchTarget.classList.remove('active-position');
        }
    }
</script>
