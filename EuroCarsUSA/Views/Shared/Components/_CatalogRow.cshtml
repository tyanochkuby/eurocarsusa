@using EuroCarsUSA.Data.Enums
@using EuroCarsUSA.ViewModels
@using EuroCarsUSA.Views.Shared.Components
@using Microsoft.AspNetCore.Components
@model CatalogEditionViewModel
@{
    var index = ViewData["Index"];
    var uniqueId = $"car-{index}";
}

<tr id="car-row-@uniqueId">
    <td><component type="typeof(EditableField<Guid>)" render-mode="ServerPrerendered" param-Value="Model.Id" param-Name="@($"[{index}].Id")" param-IsVisible="false" /></td>
    <td><component type="typeof(EnumDropdown<CarMake>)" render-mode="ServerPrerendered" param-SelectedValue="Model.Make" param-SelectedValueChanged="@EventCallback.Factory.Create<CarMake>(this, value => Model.Make = value)" param-Name="@($"[{index}].Make")" /></td>
    <td><component type="typeof(EnumDropdown<CarType>)" render-mode="ServerPrerendered" param-SelectedValue="Model.Type" param-SelectedValueChanged="@EventCallback.Factory.Create<CarType>(this, value => Model.Type = value)" param-Name="@($"[{index}].Type")" /></td>
    <td><component type="typeof(EditableField<string>)" render-mode="ServerPrerendered" param-Value="Model.Model" param-ValueChanged="@EventCallback.Factory.Create<string>(this, value => Model.Model = value)" param-Name="@($"[{index}].Model")" /></td>
    <td><component type="typeof(EnumDropdown<CarColor>)" render-mode="ServerPrerendered" param-SelectedValue="Model.Color" param-SelectedValueChanged="@EventCallback.Factory.Create<CarColor>(this, value => Model.Color = value)" param-Name="@($"[{index}].Color")" /></td>
    <td>
        <partial name="~/Views/Shared/Components/_ImageEditor.cshtml" model="Tuple.Create(new List<string>(), uniqueId)" />
        <input type="hidden" id="ImagesJson-@uniqueId" name="@($"[{index}].ImagesJson")" value="" />
    </td>
    <td><component type="typeof(EditableField<string>)" render-mode="ServerPrerendered" param-Value="Model.VIN" param-ValueChanged="@EventCallback.Factory.Create<string>(this, value => Model.VIN = value)" param-Name="@($"[{index}].VIN")" /></td>
    <td><component type="typeof(EditableField<int>)" render-mode="ServerPrerendered" param-Value="Model.Mileage" param-ValueChanged="@EventCallback.Factory.Create<int>(this, value => Model.Mileage = value)" param-Name="@($"[{index}].Mileage")" /></td>
    <td><component type="typeof(EditableField<int>)" render-mode="ServerPrerendered" param-Value="Model.Year" param-ValueChanged="@EventCallback.Factory.Create<int>(this, value => Model.Year = value)" param-Name="@($"[{index}].Year")" /></td>
    <td><component type="typeof(EnumDropdown<CarFuelType>)" render-mode="ServerPrerendered" param-SelectedValue="Model.FuelType" param-SelectedValueChanged="@EventCallback.Factory.Create<CarFuelType>(this, value => Model.FuelType = value)" param-Name="@($"[{index}].FuelType")" /></td>
    <td><component type="typeof(EditableField<int>)" render-mode="ServerPrerendered" param-Value="Model.EngineVolume" param-ValueChanged="@EventCallback.Factory.Create<int>(this, value => Model.EngineVolume = value)" param-Name="@($"[{index}].EngineVolume")" /></td>
    <td><component type="typeof(EnumDropdown<CarTransmission>)" render-mode="ServerPrerendered" param-SelectedValue="Model.Transmission" param-SelectedValueChanged="@EventCallback.Factory.Create<CarTransmission>(this, value => Model.Transmission = value)" param-Name="@($"[{index}].Transmission")" /></td>
    <td><component type="typeof(EditableField<int>)" render-mode="ServerPrerendered" param-Value="Model.Price" param-ValueChanged="@EventCallback.Factory.Create<int>(this, value => Model.Price = value)" param-Name="@($"[{index}].Price")" /></td>
    <td>
        <button type="button" class="btn btn-danger" onclick="deleteCar('@Model.Id', '@uniqueId')">Delete</button>
    </td>
</tr>