@using EuroCarsUSA.Data.Enums
@using EuroCarsUSA.Resources
@using EuroCarsUSA.ViewModels
@using EuroCarsUSA.Views.Shared.Components
@using Microsoft.AspNetCore.Components

@inject Localizer localizer

@model Tuple<CatalogEditionViewModel, int>
@{
    var i = Model.Item2 ;
    var uniqueId = $"car-{i}";
    var car = Model.Item1;
}

<div class="col-12" id="car-row-@uniqueId">
    <div class="" id="car-row-@uniqueId">
        <div class="row py-2 m-0 bg-white" onmouseover="showBorder('@uniqueId')" onmouseout="hideBorder('@uniqueId')">
            <div class="col">
                <div class="row h-100 align-items-center gx-3">
                    @await Html.PartialAsync("_EditableField", new EditableField {
                            Value = car.Id,
                            Name = $"[{i}].Id",
                            IsVisible = false
                            })
                    
                    <div class="col">
                        <div class="row">
                            <div class="col-12 col-md-6 mb-2 mb-md-0">
                                <div class="h-100">
                                    @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarMake> {
                                        Value = car.Make,
                                        Name = $"[{i}].Make",
                                        Overline = @localizer.Make,
                                        CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
                                    })
                                </div>                       
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="h-100 align-content-center">
                                    @await Html.PartialAsync("_EditableField", new EditableField {
                                        Value = car.Model,
                                        Name = $"[{i}].Model",
                                        Overline = @localizer.Model,
                                        CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
                                    })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-auto p-0 center-items" style="height:48px; width:48px" onclick="toggleVisibility('@uniqueId')">
                        <div class="col" id="icon-@uniqueId">
                            @Html.Partial("_IconButton", new { IconName = "Keyboard arrow down", Color = "primary", IconColor = "primary", Attributes = "type=\"button\"" })
                        </div>
				    </div>
				</div>
            </div>
        </div>
    </div>
    <div class="border-bottom border-3 border-primary" id="border-@uniqueId" style="opacity: 0; transition: opacity 0.3s;"></div>


    <div class="edit-car-details bg-white overflow-hide overflow-auto" id="popup-@uniqueId" style="max-height:0px; height:320px;">
        <div class="py-2">
            <div class="py-2 ps-3 pe-4">
                @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarColor>
                {
                    Value = car.Color,
                    Name = $"[{i}].Color",
                    Overline = @localizer.Color,
                    CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
                })
            </div>

            <div class="py-2 ps-3 pe-4">
                @await Html.PartialAsync("_EditableField", new EditableField
               {
                   Value = car.Price,
                   Name = $"[{i}].Price",
                   Overline = @localizer.Price,
                   CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
               })
            </div>

            <div class="py-2 ps-3 pe-4 forEditMode d-block" style="height:56px;">
                <partial name="~/Views/Shared/Components/_ImageEditor.cshtml" model="@(Tuple.Create(car.Images, uniqueId, car.Id))" />
                <input type="hidden" id="ImagesJson-@uniqueId" name="@($"[{i}].ImagesJson")" value="@car.ImagesJson" />
            </div>

            <div class="py-2 ps-3 pe-4">
                @await Html.PartialAsync("_EditableField", new EditableField
               {
                   Value = car.Year,
                   Name = $"[{i}].Year",
                   Overline = @localizer.Year,
                   CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
               })
            
            </div>

            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EditableField", new EditableField {
	                Value = car.Mileage,
	                Name = $"[{i}].Mileage",
                    Overline = @localizer.Mileage,
                    CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
                })
            
            </div>

            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarType>
                {
                    Value = car.Type,
                    Name = $"[{i}].Type",
                    Overline = @localizer.Type,
                    CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
                })
            
            </div>
        
            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EditableField", new EditableField
                {
                    Value = car.EngineVolume == null ? "" : car.EngineVolume,
                    Name = $"[{i}].EngineVolume",
                    Overline = @localizer.EngineVolume,
                    CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
                })
            </div>

            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarTransmission>
                {
                    Value = car.Transmission,
                    Name = $"[{i}].Transmission",
                    Overline = @localizer.Transmission,
                    CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
                })
            
            </div>

            <!-- Drive type??? -->

            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarFuelType>
               {
                   Value = car.FuelType,
                   Name = $"[{i}].FuelType",
                   Overline = @localizer.FuelType,
                   CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
               })
            </div>

            <div class="py-2 ps-3 pe-4" >
                @await Html.PartialAsync("_EditableField", new EditableField {
	                Value = car.VIN,
	                Name = $"[{i}].VIN",
                    Overline = "VIN",
                    CssClass = "p-2 bg-primary-200 rounded-8 border border-primary"
                })
            </div>

            <div class="py-2 ps-3 pe-4">
                @await Html.PartialAsync("_EnumDropdown", new EnumDropdown<CarStatus>
                {
                    Value = car.Status,
                    Name = $"[{i}].Status",
                    Overline = @localizer.Status,
                    CssClass = "p-2 bg-secondary-200 rounded-8 border border-primary overflow-visible"
                })
            </div>

            <div class="py-2 ps-3 pe-4 justify-content-end d-flex">
                <a class="">
                    @Html.Partial("_Button", new _Button
                    {
                        Text = @localizer.Delete,
                        Color = "primary",
                        Classes = "forEditMode bg-danger",
                        Attributes = $"type=\"button\"  onclick=\"deleteCar('{@car.Id}', '{@uniqueId}')\"",
                        LeftIcon = @Html.Partial("_Icon", new { IconName = Url.Content("Delete"), Color = "white" }),
                        RightIcon = (object)null,
                        TextColor = "",
                    })
                </a>
            </div>


            
        </div>
    </div>
</div>

