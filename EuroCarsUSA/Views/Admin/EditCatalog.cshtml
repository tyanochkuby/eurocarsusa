@using EuroCarsUSA.Data.Enums
@using EuroCarsUSA.ViewModels
@using EuroCarsUSA.Views.Shared.Components
@using Microsoft.AspNetCore.Components
@model IEnumerable<CatalogEditionViewModel>

<form method="post" asp-action="SaveCatalogChanges" class="container">
    <input type="hidden" id="deletedCarsIds" name="deletedCarsIds" value="" />

    <div class="row py-2">
        <div class="d-flex col">
            <a asp-controller="Home" asp-action="BackToCatalogWithFilters">
                @await Html.PartialAsync("_Button", new _Button
                {
                    Text = "Back",
                    Color = "primary",
                    Classes = "me-2",
                    Attributes = "",
                    LeftIcon = await Html.PartialAsync("_Icon", new { IconName = Url.Content("Arrow back"), Color = "white" }),
                    RightIcon = null,
                    TextColor = ""
                })
            </a>

            <a asp-controller="Admin" asp-action="EditCatalog">
                @await Html.PartialAsync("_Button", new _Button
                {
                    Text = "Edit catalog",
                    Color = "secondary",
                    Classes = "me-2",
                    Attributes = "type=\"button\"",
                    LeftIcon = null,
                    RightIcon = null,
                    TextColor = "text-primary"
                })
            </a>
        </div>
        <div class="col-auto">
            @await Html.PartialAsync("_Button", new _Button
            {
                Text = "Add",
                Color = "primary",
                Classes = "me-2",
                Attributes = "type=\"button\" onclick=\"addNewRow()\"",
                LeftIcon = await Html.PartialAsync("_Icon", new { IconName = Url.Content("Add"), Color = "white" }),
                RightIcon = null,
                TextColor = ""
            })
            @await Html.PartialAsync("_Button", new _Button
            {
                Text = "Save Changes",
                Color = "primary",
                Classes = "me-2",
                Attributes = "type=\"submit\"",
                LeftIcon = null,
                RightIcon = null,
                TextColor = ""
            })
        </div>
    </div>

    <div class="bg-neutral-500 p-3 p-3 rounded-16">
        <div id="catalog" class="row gy-2">
            @for (int i = 0; i < Model.Count(); i++)
            {
                var car = Model.ElementAt(i);
                @await Html.PartialAsync("_EditCar", new Tuple<CatalogEditionViewModel, int>(car, i))
            }
        </div>
    </div>
</form>

@section Scripts {
    <script>
        function showModal(uniqueId) {
            document.getElementById('imageEditorModal-' + uniqueId).style.display = 'block';
            document.getElementById('modalBackdrop-' + uniqueId).style.display = 'block';
        }

        function hideModal(uniqueId) {
            document.getElementById('imageEditorModal-' + uniqueId).style.display = 'none';
            document.getElementById('modalBackdrop-' + uniqueId).style.display = 'none';
        }

        function addImage(uniqueId) {
            var newImageUrl = document.getElementById('newImageUrl-' + uniqueId).value;
            if (newImageUrl) {
                var listGroup = document.querySelector('#imageEditorModal-' + uniqueId + ' .list-group');
                var newItem = document.createElement('li');
                newItem.className = 'list-group-item';
                newItem.innerHTML = '<img src="' + newImageUrl + '" alt="Image" class="img-thumbnail" style="width: 100px; height: 100px;" />' +
                                    '<button type="button" class="btn btn-danger btn-sm" onclick="removeImage(this)">Remove</button>';
                listGroup.appendChild(newItem);
                document.getElementById('newImageUrl-' + uniqueId).value = '';
            }
        }

        function removeImage(button) {
            var listItem = button.parentElement;
            listItem.parentElement.removeChild(listItem);
        }

        function saveChanges(uniqueId) {
            var images = [];
            var listItems = document.querySelectorAll('#imageEditorModal-' + uniqueId + ' .list-group-item img');
            listItems.forEach(function(img) {
                images.push(img.src);
            });
            document.getElementById('ImagesJson-' + uniqueId).value = JSON.stringify(images);
            hideModal(uniqueId);
        }

        function deleteCar(carId, uniqueId) {
            var deletedCarsIdsInput = document.getElementById('deletedCarsIds');
            var deletedCarsIds = deletedCarsIdsInput.value ? JSON.parse(deletedCarsIdsInput.value) : [];
            if(carId != '')
            {
                deletedCarsIds.push(carId);
            }

            deletedCarsIdsInput.value = JSON.stringify(deletedCarsIds);

            var carRow = document.getElementById('car-row-' + uniqueId);
            carRow.parentElement.removeChild(carRow);
        }
        function addNewRow() {
            var tableBody = document.getElementById('catalog');
            var index = tableBody.children.length;

            $.ajax({
                url: '/Admin/GetNewCatalogRow',
                data: { index: index },
                type: 'GET',
                success: function (html) {
                    tableBody.insertAdjacentHTML('beforeend', html);
                },
                error: function () {
                    alert('An error occurred while adding a row');
                }
            });
        }
    </script>
}

