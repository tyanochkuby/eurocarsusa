<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CarType" xml:space="preserve">
    <value>Typ auta</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Kolor</value>
  </data>
  <data name="EngineVolume" xml:space="preserve">
    <value>Objętość silnika</value>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>Filtry</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="FuelType" xml:space="preserve">
    <value>Typ paliwa</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Marka</value>
  </data>
  <data name="Mileage" xml:space="preserve">
    <value>Przebieg</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Cena</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sortuj według</value>
  </data>
  <data name="Transmission" xml:space="preserve">
    <value>Transmisja</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Rok</value>
  </data>
  <data name="SortOrder_NewFirst" xml:space="preserve">
    <value>Świeżo dodane</value>
  </data>
  <data name="SortOrder_ByYear" xml:space="preserve">
    <value>Najstarsze najpierw</value>
  </data>
  <data name="SortOrder_ByYearDesc" xml:space="preserve">
    <value>Najnowsze najpierw</value>
  </data>
  <data name="SortOrder_ByMileage" xml:space="preserve">
    <value>Najniższy przebieg</value>
  </data>
  <data name="SortOrder_ByPrice" xml:space="preserve">
    <value>Najniższa cena</value>
  </data>
  <data name="SortOrder_ByPriceDesc" xml:space="preserve">
    <value>Najwyższa cena</value>
  </data>
  <data name="Electric" xml:space="preserve">
    <value>Elektryczny</value>
  </data>
  <data name="ShowMore" xml:space="preserve">
    <value>Pokaż więcej</value>
  </data>
  <data name="ContactSeller" xml:space="preserve">
    <value>Kontant ze sprzedawcą</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Wiadomość została wysłana!</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Numer telefonu</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>Wyślij wiadomość</value>
  </data>
  <data name="CarColor_Beige" xml:space="preserve">
    <value>Beżowy</value>
  </data>
  <data name="CarColor_Black" xml:space="preserve">
    <value>Czarny</value>
  </data>
  <data name="CarColor_Blue" xml:space="preserve">
    <value>Niebieski</value>
  </data>
  <data name="CarColor_Brown" xml:space="preserve">
    <value>Brązowy</value>
  </data>
  <data name="CarColor_Gray" xml:space="preserve">
    <value>Szary</value>
  </data>
  <data name="CarColor_Green" xml:space="preserve">
    <value>Zielony</value>
  </data>
  <data name="CarColor_Orange" xml:space="preserve">
    <value>Pomarańczowy</value>
  </data>
  <data name="CarColor_Pink" xml:space="preserve">
    <value>Różowy</value>
  </data>
  <data name="CarColor_Purple" xml:space="preserve">
    <value>Fioletowy</value>
  </data>
  <data name="CarColor_Red" xml:space="preserve">
    <value>Czerwony</value>
  </data>
  <data name="CarColor_Silver" xml:space="preserve">
    <value>Srebrny</value>
  </data>
  <data name="CarColor_White" xml:space="preserve">
    <value>Biały</value>
  </data>
  <data name="CarColor_Yellow" xml:space="preserve">
    <value>Żółty</value>
  </data>
  <data name="CarFuelType_Benzine" xml:space="preserve">
    <value>Benzyna</value>
  </data>
  <data name="CarFuelType_Diesel" xml:space="preserve">
    <value>Diesel</value>
  </data>
  <data name="CarFuelType_Electric" xml:space="preserve">
    <value>Elektryczne</value>
  </data>
  <data name="CarTransmission_Automatic" xml:space="preserve">
    <value>Automatyczna</value>
  </data>
  <data name="CarTransmission_Manual" xml:space="preserve">
    <value>Manualna</value>
  </data>
  <data name="CarTransmission_Robot" xml:space="preserve">
    <value>Robot</value>
  </data>
  <data name="LikesHeader" xml:space="preserve">
    <value>Twoje ulubione auta</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Wróć</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Wybierz</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="Diesel" xml:space="preserve">
    <value>Diesel</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Od</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Wiadomość</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>Do</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Wpisz</value>
  </data>
  <data name="Call" xml:space="preserve">
    <value>Zadzwoń</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Szczegóły</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Puste</value>
  </data>
  <data name="CustomOrderEmailSubject" xml:space="preserve">
    <value>EuroCarUsa - Przyjeliśmy Twoje zamówienie</value>
  </data>
  <data name="CustomOrderEmailBody" xml:space="preserve">
    <value>Dzień dobry!\n\n

Cieszymy się, że wybrałeś nas! Z przyjemnością powiadomiamy, że dostaliśmy Twoje zamówienie. Niedługo nasi specjaliści do Ciebie oddzwonią lub odpiszą.\n\n

Z poważaniem,\n
Zespół EuroCarUsa</value>
  </data>
  <data name="AdminCustomOrderEmailSubject" xml:space="preserve">
    <value>EuroCarUsa - Новый заказ</value>
  </data>
  <data name="AdminCustomOrderEmailBody" xml:space="preserve">
    <value>Получен новый заказ. Номер и емейл клиента - {0} , {1}. Подробности на сайте.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="YourOrderWasReceived" xml:space="preserve">
    <value>Twoje zamówienie zostało wysłane</value>
  </data>
  <data name="Gearbox" xml:space="preserve">
    <value>Skrzynia biegów</value>
  </data>
  <data name="BodyType" xml:space="preserve">
    <value>Typ nadwozia</value>
  </data>
  <data name="EditImages" xml:space="preserve">
    <value>Edytuj zdjęcia</value>
  </data>
  <data name="AddImage" xml:space="preserve">
    <value>Dodaj zdjęcie</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Wrzuć zdjęcie</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Dodaj</value>
  </data>
  <data name="EnterImageURL" xml:space="preserve">
    <value>Wklej link do zdjęcia</value>
  </data>
  <data name="LastAddedAuto" xml:space="preserve">
    <value>Ostatnio dodane auto</value>
  </data>
  <data name="WeRecommend" xml:space="preserve">
    <value>Sugestje</value>
  </data>
  <data name="SeeAll" xml:space="preserve">
    <value>Zobacz wszystkie</value>
  </data>
  <data name="AboutUs" xml:space="preserve">
    <value>O nas</value>
  </data>
  <data name="AboutUsText" xml:space="preserve">
    <value>Jesteśmy białoruską firmą specjalizującą się w sprzedaży samochodów w atrakcyjnych cenach. Nasza oferta obejmuje szeroką gamę pojazdów, które sprowadzamy z USA, co pozwala nam zaoferować wyjątkowo konkurencyjne ceny. </value>
  </data>
  <data name="PhoneContact" xml:space="preserve">
    <value>Kontakt telefoniczny</value>
  </data>
  <data name="PhoneContactText" xml:space="preserve">
    <value>Najszybszym sposobem na kontakt z nami jest ten przycisk - wciśnij i zadzwoń</value>
  </data>
  <data name="FormContact" xml:space="preserve">
    <value>Kontakt poprzez formularz</value>
  </data>
  <data name="FormContactText" xml:space="preserve">
    <value>Drugi sposób na kontakt z nami to formularz. Kliknij, zostaw swoje spersonalizowane zamówienie, a my odzwonimy.</value>
  </data>
  <data name="IndividualOrder" xml:space="preserve">
    <value>Zamówienie</value>
  </data>
  <data name="Likes" xml:space="preserve">
    <value>Upodobania</value>
  </data>
  <data name="Views" xml:space="preserve">
    <value>Obejrzenia</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statystyki</value>
  </data>
</root>